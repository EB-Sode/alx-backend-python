pipeline {
    agent {
        docker {
            image 'python:3.10'
            args '-u root'
        }
    }

    environment {
        REPORT_DIR = 'messaging_app/reports'
        REPORT_FILE = "${REPORT_DIR}/test-results.xml"
    }

    stages {
        stage('Checkout Code') {
            steps {
                echo 'Cloning repository from GitHub...'
                git branch: 'main',
                    url: 'https://github.com/EB-Sode/alx-backend-python.git',
                    credentialsId: 'github-credentials'
                dir('messaging_app') {
                    echo 'Using messaging_app subdirectory...'
                }
            }
        }

        stage('Install Dependencies') {
            steps {
                echo 'Installing Python dependencies...'
                sh '''
                    pip3 install --upgrade pip
                    pip3 install -r messaging_app/requirements.txt
                '''
            }
        }

        stage('Run Tests') {
            steps {
                echo 'Running pytest and generating JUnit XML report...'
                sh '''
                    mkdir -p ${REPORT_DIR}
                    pytest messaging_app/tests --junitxml=${REPORT_FILE} || true
                '''
            }
        }

        stage('Publish Test Report') {
            steps {
                junit allowEmptyResults: true, testResults: "${REPORT_FILE}"
            }
        }
    }

    post {
        always {
            echo 'Archiving test report artifacts...'
            archiveArtifacts artifacts: "${REPORT_FILE}", fingerprint: true
        }
        success {
            echo '✅ All tests passed successfully!'
        }
        failure {
            echo '❌ Tests failed. Check the report for details.'
        }
    }
}
